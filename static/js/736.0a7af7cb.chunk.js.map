{"version":3,"file":"static/js/736.0a7af7cb.chunk.js","mappings":"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","sources":["components/MovieFinder/formFinder.styled.js","components/MovieFinder/formFinder.js","Pages/MoviesPage/MoviesPage.js","Pages/MoviesPage/MoviesPage.styled.js","Services/fetchAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormWrap = styled.div`\n\tdisplay: inline-flex;\n\tmargin: 0 50%;\n\ttransform: translateX(-50%);\n`;\n\nexport const ButtonSearch = styled.button`\n\tmargin: 0 0 0 15px;\n\t/* display: inline-flex; */\n\twidth: 80px;\n\theight: 40px;\n\tborder-radius: 5px;\n\n\ttransition: 200ms linear;\n\n\t&:hover {\n\t\tcolor: orange;\n\t\tbackground-color: #222222;\n\t\tbox-shadow: 3px 4px 10px 0px rgba(0, 0, 0, 0.75);\n\t\ttransform: translateY(-1px);\n\t}\n`;\n\nexport const InputSearch = styled.input`\n\tdisplay: inline-block;\n\theight: 40px;\n\tbackground: #dddddd;\n\n\tfont-size: 24px;\n`;\n\nexport const LabelSearch = styled.label`\n\tdisplay: inline-flex;\n\talign-items: center;\n`;\n","import { useState } from 'react';\nimport {\n\tFormWrap,\n\tButtonSearch,\n\tInputSearch,\n\tLabelSearch,\n} from './formFinder.styled';\n\nexport function MovieFinder({ onSubmit, queryItem }) {\n\tconst [query, setQuery] = useState('');\n\n\tfunction handleInput(e) {\n\t\tsetQuery(e.target.value);\n\t}\n\n\tfunction onSubmitForm(e) {\n\t\te.preventDefault();\n\t\tonSubmit(query);\n\t\tsetQuery('');\n\t}\n\n\treturn (\n\t\t<FormWrap>\n\t\t\t<form onSubmit={onSubmitForm}>\n\t\t\t\t<LabelSearch>\n\t\t\t\t\t<InputSearch\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder={queryItem}\n\t\t\t\t\t\tonInput={handleInput}\n\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t/>\n\t\t\t\t\t<ButtonSearch type=\"submit\">Submit</ButtonSearch>\n\t\t\t\t</LabelSearch>\n\t\t\t</form>\n\t\t</FormWrap>\n\t);\n}\n","import { useEffect, useState } from 'react';\nimport { MovieFinder } from '../../components/MovieFinder/formFinder';\nimport { fetchQueryMovie } from 'Services/fetchAPI';\nimport { useSearchParams } from 'react-router-dom';\n\nimport {\n\tList,\n\tListItem,\n\tLinkItemsWrap,\n\tItemName,\n\tItemQueryTitle,\n\tItemImg,\n\tItemItem,\n} from './MoviesPage.styled';\n\nexport function MoviesPage() {\n\tconst [queryMovieList, setQueryMovieList] = useState('');\n\tconst [query, setQuery] = useState('');\n\tconst [urlQuery, setUrlQuery] = useSearchParams();\n\tconst currentSerchParam = urlQuery.get('query');\n\n\tuseEffect(() => {\n\t\tif (!query) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetUrlQuery({ query: query });\n\n\t\tasync function fetchQ() {\n\t\t\ttry {\n\t\t\t\tconst response = await fetchQueryMovie(query);\n\t\t\t\tsetQueryMovieList(response);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\t\tfetchQ();\n\t}, [query, setUrlQuery]);\n\n\tuseEffect(() => {\n\t\tif (currentSerchParam) {\n\t\t\tsetQuery(currentSerchParam);\n\t\t}\n\t}, [currentSerchParam]);\n\n\tfunction onFormSubmit(e) {\n\t\tsetQuery(e);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<MovieFinder onSubmit={onFormSubmit} queryItem={query} />\n\n\t\t\t{queryMovieList && (\n\t\t\t\t<>\n\t\t\t\t\t<ItemQueryTitle>\n\t\t\t\t\t\tWe found this movies wich contain your query: \"{query}\"\n\t\t\t\t\t</ItemQueryTitle>\n\n\t\t\t\t\t<List>\n\t\t\t\t\t\t{queryMovieList.map(movie => (\n\t\t\t\t\t\t\t<ListItem key={movie.id}>\n\t\t\t\t\t\t\t\t<ItemItem to={`/movies/${movie.id}`}>\n\t\t\t\t\t\t\t\t\t<LinkItemsWrap>\n\t\t\t\t\t\t\t\t\t\t{movie.poster_path && (\n\t\t\t\t\t\t\t\t\t\t\t<ItemImg\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"poster\"\n\t\t\t\t\t\t\t\t\t\t\t\twidth=\"50\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t<ItemName>\n\t\t\t\t\t\t\t\t\t\t\t{movie.original_title ?? movie.original_name}\n\t\t\t\t\t\t\t\t\t\t</ItemName>\n\t\t\t\t\t\t\t\t\t</LinkItemsWrap>\n\t\t\t\t\t\t\t\t</ItemItem>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</List>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkItemsWrap = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: 20px;\n\n\twidth: 320px;\n`;\n\nexport const ItemName = styled.p`\n\tdisplay: flex;\n`;\n\nexport const ItemQueryTitle = styled.h3`\n\tdisplay: inline-flex;\n\twidth: 100%;\n\tjustify-content: center;\n\tmargin: 20px 0 0 0;\n`;\n\nexport const ItemImg = styled.img`\n\tmargin-right: 15px;\n\twidth: 80px;\n`;\n\nexport const ItemItem = styled(NavLink)`\n\twidth: 95%;\n\ttransition: 200ms linear;\n\t&:hover {\n\t\tbackground: lightgray;\n\t\ttransform: scale(0.95);\n\t\tborder-radius: 5px;\n\t\tborder: 1px solid black;\n\t}\n`;\n\nexport const ListItem = styled.li`\n\tdisplay: inline-flex;\n\n\tmargin: 10px 20px 10px 10px;\n\n\twidth: 30%;\n\theight: 180px;\n\tmin-width: 200px;\n\ttransition: 250ms linear;\n\n\toverflow: hidden;\n`;\nexport const List = styled.ul`\n\tlist-style: none;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: space-between;\n\n\tmargin: 40px;\n\tpadding: 0;\n`;\n","import axios from 'axios';\nconst API_KEY = '2092ea308ebb6e1cdae36d6ed4a357cb';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTopMovies() {\n\tconst response = await axios.get(\n\t\t`${BASE_URL}trending/all/day?api_key=${API_KEY}`\n\t);\n\treturn response.data.results;\n}\nexport async function fetchQueryMovie(query) {\n\tconst response = await axios.get(\n\t\t`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n\t);\n\treturn response.data.results;\n}\n\nexport async function fetchMovieInfo(movie_id) {\n\tconst response = await axios.get(\n\t\t`${BASE_URL}movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n\t);\n\treturn response.data;\n}\n\nexport async function fetchMovieImg() {\n\tconst response = await axios.get(\n\t\t`${BASE_URL}configuration?api_key=${API_KEY}&language=en-US`\n\t);\n\treturn response.data;\n}\nexport async function fetchReview(movieId) {\n\tconst response = await axios.get(\n\t\t`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n\t);\n\treturn response.data.results;\n}\nexport async function fetchCast(movieId) {\n\tconst response = await axios.get(\n\t\t`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1`\n\t);\n\treturn response.data.cast;\n}\n"],"names":["FormWrap","styled","ButtonSearch","InputSearch","LabelSearch","MovieFinder","onSubmit","queryItem","useState","query","setQuery","e","preventDefault","type","placeholder","onInput","target","value","MoviesPage","queryMovieList","setQueryMovieList","useSearchParams","urlQuery","setUrlQuery","currentSerchParam","get","useEffect","fetchQueryMovie","response","console","log","fetchQ","ItemQueryTitle","List","map","movie","ListItem","ItemItem","to","id","LinkItemsWrap","poster_path","ItemImg","src","alt","width","ItemName","original_title","original_name","NavLink","API_KEY","BASE_URL","fetchTopMovies","axios","data","results","fetchMovieInfo","movie_id","fetchReview","movieId","fetchCast","cast"],"sourceRoot":""}