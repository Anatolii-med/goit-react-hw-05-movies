{"version":3,"file":"static/js/506.9934ebb7.chunk.js","mappings":"qSAiBO,SAASA,IACf,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAiBjB,IAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAIf,8GAEqBC,EAAAA,EAAAA,IAAeL,GAFpC,OAEQM,EAFR,OAGEP,EAASO,GAHX,gDAKEC,QAAQC,IAAR,MALF,0DAJe,sBACVR,GADU,mCAYfS,KACE,CAACT,IAECF,EAIL,OACC,UAAC,EAAAY,cAAD,YACC,SAAC,EAAAC,WAAD,CACCC,KAAK,SACLC,QAAS,WACRX,GAAU,IAHZ,sBAQA,4BACC,UAAC,EAAAY,UAAD,YACC,SAAC,EAAAC,YAAD,CACCC,IAAG,8CAAyClB,EAAMmB,aAClDC,IAAI,YAEL,4BACC,SAAC,EAAAC,WAAD,UAAarB,EAAMsB,kBACnB,SAAC,EAAAC,cAAD,0BACA,SAAC,EAAAC,cAAD,UAAgBxB,EAAMyB,gBACtB,SAAC,EAAAF,cAAD,yBACA,SAAC,EAAAC,cAAD,UAAgBxB,EAAM0B,YACtB,SAAC,EAAAH,cAAD,sBACA,SAAC,EAAAI,UAAD,UACE3B,EAAM4B,OAAOC,KAAI,SAAAC,GACjB,OAAO,UAAC,EAAAC,SAAD,WAA0BD,EAAME,KAAhC,MAAeF,EAAMG,eAK/BjC,IACA,iCACC,UAAC,IAAD,YACC,SAAC,IAAD,CAAOkC,GAAI,OAAQC,SAAS,EAA5B,mBAGA,SAAC,IAAD,CAAOD,GAAI,SAAUC,SAAS,EAA9B,wBAID,SAAC,EAAAC,SAAD,CAAUC,UAAU,uCAApB,UACC,SAAC,KAAD,iB,oXChFMzB,EAAgB0B,EAAAA,GAAAA,IAAH,qDAIbzB,EAAayB,EAAAA,GAAAA,OAAH,2cAyBVtB,EAAYsB,EAAAA,GAAAA,IAAH,8GAMTrB,EAAcqB,EAAAA,GAAAA,IAAH,mFAMXjB,EAAaiB,EAAAA,GAAAA,GAAH,yEAMVf,EAAgBe,EAAAA,GAAAA,GAAH,yEAKbd,EAAgBc,EAAAA,GAAAA,EAAH,2GAObX,EAAYW,EAAAA,GAAAA,GAAH,+HAQTP,EAAWO,EAAAA,GAAAA,GAAH,4F,yMCpEfC,EAAU,mCACVC,EAAW,gCAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACiBC,IAAAA,IAAA,UACnBF,EADmB,oCACiBD,IAFlC,cACAI,EADA,yBAICA,EAASC,KAAKC,SAJf,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACiBL,IAAAA,IAAA,UACnBF,EADmB,gCACaD,EADb,iCAC6CQ,EAD7C,gCADjB,cACAJ,EADA,yBAICA,EAASC,KAAKC,SAJf,kEAOA,SAAetC,EAAtB,+CAAO,OAAP,oBAAO,WAA8ByC,GAA9B,uFACiBN,IAAAA,IAAA,UACnBF,EADmB,iBACFQ,EADE,oBACkBT,EADlB,oBADjB,cACAI,EADA,yBAICA,EAASC,MAJV,kEAaA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA2B/C,GAA3B,uFACiBwC,IAAAA,IAAA,UACnBF,EADmB,iBACFtC,EADE,4BACyBqC,EADzB,2BADjB,cACAI,EADA,yBAICA,EAASC,KAAKC,SAJf,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAyBhD,GAAzB,uFACiBwC,IAAAA,IAAA,UACnBF,EADmB,iBACFtC,EADE,4BACyBqC,EADzB,2BADjB,cACAI,EADA,yBAICA,EAASC,KAAKO,MAJf","sources":["Pages/MovieDetailPage/MovieDetailPage.js","Pages/MovieDetailPage/MovieDetailPage.styled.js","Services/fetchAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams, Outlet, useNavigate } from 'react-router-dom';\nimport { fetchMovieInfo } from '../../Services/fetchAPI';\nimport { Suspense } from 'react';\nimport { LinkN, NavWrap } from '../../components/Nav/Nav.styled';\nimport {\n\tComponentWrap,\n\tButtonBack,\n\tMovieWrap,\n\tMoviePoster,\n\tMovieTitle,\n\tMovieSubTitle,\n\tMovieSubDiscr,\n\tGenreList,\n\tListItem,\n} from './MovieDetailPage.styled';\n\nexport function MovieDetailPage() {\n\tconst [movie, setMovie] = useState('');\n\tconst { movieId } = useParams();\n\tconst navigate = useNavigate();\n\n\tuseEffect(() => {\n\t\tif (!movieId) {\n\t\t\treturn;\n\t\t}\n\t\tasync function fetchMovie() {\n\t\t\ttry {\n\t\t\t\tconst item = await fetchMovieInfo(movieId);\n\t\t\t\tsetMovie(item);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\t\tfetchMovie();\n\t}, [movieId]);\n\n\tif (!movie) {\n\t\treturn;\n\t}\n\n\treturn (\n\t\t<ComponentWrap>\n\t\t\t<ButtonBack\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tnavigate(-1);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tGO BACK\n\t\t\t</ButtonBack>\n\t\t\t<div>\n\t\t\t\t<MovieWrap>\n\t\t\t\t\t<MoviePoster\n\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n\t\t\t\t\t\talt=\"poster\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<MovieTitle>{movie.original_title}</MovieTitle>\n\t\t\t\t\t\t<MovieSubTitle>User score</MovieSubTitle>\n\t\t\t\t\t\t<MovieSubDiscr>{movie.vote_average}</MovieSubDiscr>\n\t\t\t\t\t\t<MovieSubTitle>Overview:</MovieSubTitle>\n\t\t\t\t\t\t<MovieSubDiscr>{movie.overview}</MovieSubDiscr>\n\t\t\t\t\t\t<MovieSubTitle>Genres</MovieSubTitle>\n\t\t\t\t\t\t<GenreList>\n\t\t\t\t\t\t\t{movie.genres.map(genre => {\n\t\t\t\t\t\t\t\treturn <ListItem key={genre.id}>{genre.name} </ListItem>;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</GenreList>\n\t\t\t\t\t</div>\n\t\t\t\t</MovieWrap>\n\t\t\t\t{movie && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<NavWrap>\n\t\t\t\t\t\t\t<LinkN to={'cast'} replace={true}>\n\t\t\t\t\t\t\t\tCast\n\t\t\t\t\t\t\t</LinkN>\n\t\t\t\t\t\t\t<LinkN to={'review'} replace={true}>\n\t\t\t\t\t\t\t\tReview\n\t\t\t\t\t\t\t</LinkN>\n\t\t\t\t\t\t</NavWrap>\n\t\t\t\t\t\t<Suspense fallback={<h1>Loading...</h1>}>\n\t\t\t\t\t\t\t<Outlet />\n\t\t\t\t\t\t</Suspense>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</ComponentWrap>\n\t);\n}\n\n// {data:\n// adult: false\n// backdrop_path: \"/bQ8fRUaitJvi54O2lUT6Ta7FVHK.jpg\"\n// belongs_to_collection: {id: 285564, name: 'Jarhead Collection', poster_path: '/aRFpBjCseFD6UmahAuLdqS7Or5q.jpg', backdrop_path: '/ifSnip5tvaHvxLPAyjkiihE6T2I.jpg'}\n// budget: 72000000\n// genres: (2) [{…}, {…}]\n// homepage: \"\"\n// id: 25\n// imdb_id: \"tt0418763\"\n// original_language: \"en\"\n// original_title: \"Jarhead\"\n// overview: \"Jarhead is a film about a US Marine Anthony Swofford’s experience in the Gulf War. After putting up with an arduous boot camp, Swofford and his unit are sent to the Persian Gulf where they are eager to fight, but are forced to stay back from the action. Swofford struggles with the possibility of his girlfriend cheating on him, and as his mental state deteriorates, his desire to kill increases.\"\n// popularity: 29.79\n// poster_path: \"/vwsNvqbnLqmKpbllKtancDHzizC.jpg\"\n// production_companies: (2) [{…}, {…}]\n// production_countries: (2) [{…}, {…}]\n// release_date: \"2005-11-04\"\n// revenue: 97076152\n// runtime: 123\n// spoken_languages: (4) [{…}, {…}, {…}, {…}]\n// status: \"Released\"\n// tagline: \"Welcome to the suck.\"\n// title: \"Jarhead\"\n// video: false\n// vote_average: 6.6\n// vote_count: 2276}\n","import styled from 'styled-components';\n\nexport const ComponentWrap = styled.div`\n\tmargin: 0 20px 20px 40px;\n`;\n\nexport const ButtonBack = styled.button`\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\n\tfont-size: 20px;\n\tfont-weight: 500;\n\n\tbackground-color: lightgray;\n\tborder-radius: 5px;\n\tborder: 2px solid darkgrey;\n\n\twidth: 150px;\n\tmargin: 0 0 20px 0;\n\tpadding: 5px;\n\n\ttransition: 200ms linear;\n\n\t&:hover {\n\t\tcolor: orange;\n\t\tbackground-color: #222222;\n\t\tbox-shadow: 3px 4px 10px 0px rgba(0, 0, 0, 0.75);\n\t\ttransform: translateY(-1px);\n\t}\n`;\n\nexport const MovieWrap = styled.div`\n\tdisplay: inline-flex;\n\tbackground-color: lightgoldenrodyellow;\n\tpadding: 10px;\n`;\n\nexport const MoviePoster = styled.img`\n\tmargin-right: 30px;\n\twidth: 35%;\n\tmin-width: 240px;\n`;\n\nexport const MovieTitle = styled.h3`\n\tfont-size: 36px;\n\tmargin: 0;\n\tpadding: 0;\n`;\n\nexport const MovieSubTitle = styled.h4`\n\tfont-size: 18px;\n\tmargin: 0;\n\tpadding: 0;\n`;\nexport const MovieSubDiscr = styled.p`\n\tdisplay: inline-flex;\n\tfont-size: 14px;\n\tmargin: 0 0 10px 0;\n\tpadding: 0;\n`;\n\nexport const GenreList = styled.ul`\n\tlist-style: none;\n\tdisplay: flex;\n\tflex-wrap: nowrap;\n\tflex-direction: column;\n\tpadding: 0;\n`;\n\nexport const ListItem = styled.li`\n\tdisplay: inline-flex;\n\n\theight: 20px;\n\n\toverflow: hidden;\n`;\n","import axios from 'axios';\nconst API_KEY = '2092ea308ebb6e1cdae36d6ed4a357cb';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTopMovies() {\n\tconst response = await axios.get(\n\t\t`${BASE_URL}trending/all/day?api_key=${API_KEY}`\n\t);\n\treturn response.data.results;\n}\nexport async function fetchQueryMovie(query) {\n\tconst response = await axios.get(\n\t\t`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n\t);\n\treturn response.data.results;\n}\n\nexport async function fetchMovieInfo(movie_id) {\n\tconst response = await axios.get(\n\t\t`${BASE_URL}movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n\t);\n\treturn response.data;\n}\n\nexport async function fetchMovieImg() {\n\tconst response = await axios.get(\n\t\t`${BASE_URL}configuration?api_key=${API_KEY}&language=en-US`\n\t);\n\treturn response.data;\n}\nexport async function fetchReview(movieId) {\n\tconst response = await axios.get(\n\t\t`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n\t);\n\treturn response.data.results;\n}\nexport async function fetchCast(movieId) {\n\tconst response = await axios.get(\n\t\t`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US&page=1`\n\t);\n\treturn response.data.cast;\n}\n"],"names":["MovieDetailPage","useState","movie","setMovie","movieId","useParams","navigate","useNavigate","useEffect","fetchMovieInfo","item","console","log","fetchMovie","ComponentWrap","ButtonBack","type","onClick","MovieWrap","MoviePoster","src","poster_path","alt","MovieTitle","original_title","MovieSubTitle","MovieSubDiscr","vote_average","overview","GenreList","genres","map","genre","ListItem","name","id","to","replace","Suspense","fallback","styled","API_KEY","BASE_URL","fetchTopMovies","axios","response","data","results","fetchQueryMovie","query","movie_id","fetchReview","fetchCast","cast"],"sourceRoot":""}